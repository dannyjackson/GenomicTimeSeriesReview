# This code uses the file files_to_remove.txt to filter out rows within several working files.
# The files in files_to_remove.txt were curated during the close readings in the process outlined in the document SearchTermData_Protocol.docx and consist of files that do not meet the base requirements of a time series genomic paper

# The working files are in the originals/ directory and are: screened_papers.csv, nucleotide\ diversity.csv, effective\ population.csv, originals/population\ structure.csv, gene\ flow.csv, inbreeding.csv, selection.csv, parallel.csv, drift.csv, fst.csv, tajima.csv, molecular\ clock.csv
# Each of these working files was generated by 
# The script creates files in the filtered/ directory in the format filtered_nucleotidediversity.csv


# First, make directories to keep files organized
cd DataTables/

mkdir filtered popstats originals
mv *csv originals

# second, make copies of all files that are filtered for papers that we've decided to remove

# screened papers 

# i removed the following duplicates from the original screened.csv file. I removed the may entry rather than the august entry.
# 10.1099_mgen.0.001170.pdf
# 10.1186_s13059-018-1503-4.pdf


cp originals/screened_papers.csv filtered/filtered_screened_papers.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$4 != env_var { print $0 }' filtered/filtered_screened_papers.csv > filtered/filtered_screened_papers_temp.csv

mv filtered/filtered_screened_papers_temp.csv filtered/filtered_screened_papers.csv

done < files_to_remove.txt

# nucleotide diversity
cp originals/nucleotide\ diversity.csv filtered/filtered_nucleotidediversity.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$1 != env_var { print $0 }' filtered/filtered_nucleotidediversity.csv > filtered/filtered_nucleotidediversity_temp.csv

mv filtered/filtered_nucleotidediversity_temp.csv filtered/filtered_nucleotidediversity.csv

done < files_to_remove.txt

# effective population size
cp originals/effective\ population.csv filtered/filtered_effectivepopulation.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$2 != env_var { print $0 }' filtered/filtered_effectivepopulation.csv > filtered/filtered_effectivepopulation_temp.csv

mv filtered/filtered_effectivepopulation_temp.csv filtered/filtered_effectivepopulation.csv

done < files_to_remove.txt

# population structure
cp originals/population\ structure.csv filtered/filtered_populationstructure.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$2 != env_var { print $0 }' filtered/filtered_populationstructure.csv > filtered/filtered_populationstructure_temp.csv

mv filtered/filtered_populationstructure_temp.csv filtered/filtered_populationstructure.csv

done < files_to_remove.txt


# gene flow 
cp originals/gene\ flow.csv filtered/filtered_geneflow.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$1 != env_var { print $0 }' filtered/filtered_geneflow.csv > filtered/filtered_geneflow_temp.csv

mv filtered/filtered_geneflow_temp.csv filtered/filtered_geneflow.csv

done < files_to_remove.txt

# inbreeding

cp originals/inbreeding.csv filtered/filtered_inbreeding.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$1 != env_var { print $0 }' filtered/filtered_inbreeding.csv > filtered/filtered_inbreeding_temp.csv

mv filtered/filtered_inbreeding_temp.csv filtered/filtered_inbreeding.csv

done < files_to_remove.txt

# selection

cp originals/selection_danny.csv filtered/filtered_selection.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$2 != env_var { print $0 }' filtered/filtered_selection.csv > filtered/filtered_selection_temp.csv

mv filtered/filtered_selection_temp.csv filtered/filtered_selection.csv

done < files_to_remove.txt


# parallel

cp originals/parallel.csv filtered/filtered_parallel.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$2 != env_var { print $0 }' filtered/filtered_parallel.csv > filtered/filtered_parallel_temp.csv

mv filtered/filtered_parallel_temp.csv filtered/filtered_parallel.csv

done < files_to_remove.txt

# drift 
cp originals/drift.csv filtered/filtered_drift.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$2 != env_var { print $0 }' filtered/filtered_drift.csv > filtered/filtered_drift_temp.csv

mv filtered/filtered_drift_temp.csv filtered/filtered_drift.csv

done < files_to_remove.txt

# fst
cp originals/fst.csv filtered/filtered_fst.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$2 != env_var { print $0 }' filtered/filtered_fst.csv > filtered/filtered_fst_temp.csv

mv filtered/filtered_fst_temp.csv filtered/filtered_fst.csv

done < files_to_remove.txt

# tajima
cp originals/tajima.csv filtered/filtered_tajima.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$2 != env_var { print $0 }' filtered/filtered_tajima.csv > filtered/filtered_tajima_temp.csv

mv filtered/filtered_tajima_temp.csv filtered/filtered_tajima.csv

done < files_to_remove.txt

# molecularclock
cp originals/molecular\ clock.csv filtered/filtered_molecularclock.csv

while read -r term;
do

awk -v env_var="$term" -F "," '$2 != env_var { print $0 }' filtered/filtered_molecularclock.csv > filtered/filtered_molecularclock_temp.csv

mv filtered/filtered_molecularclock_temp.csv filtered/filtered_molecularclock.csv

done < files_to_remove.txt

# third, create a paper info document that has standard terms for different core pieces of data that we're interested in

# combine screened and effective pop and use effective pop to filter out excluded ppers in the screened document

Rscript 1.2_FilteringDatatables.r
# manually edit terms in the "revise" column
Rscript 1.3_FilteringDatatables.r
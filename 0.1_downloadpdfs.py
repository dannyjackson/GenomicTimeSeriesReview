# Install the doi2pdf package if not already installed
# Run this line only once in your environment
# pip install doi2pdf

from doi2pdf import doi2pdf

# -------------------------------
# Define DOI lists
# -------------------------------

# August DOI list
doi_list = ['10.3934/mbe.2024264', '10.1186/s12711-024-00900-y', '10.1093/molbev/msae128', '10.1016/j.meegid.2024.105623', '10.1038/s41467-024-46918-0', '10.1093/molbev/msae108', '10.1371/journal.pgen.1011333', '10.1099/mgen.0.001170', '10.1016/j.cub.2023.01.064', '10.1093/evolut/qpac061', '10.3390/pathogens12081065', '10.1016/j.ympev.2023.107822', '10.1371/journal.pbio.3002333', '10.1093/molbev/msac182', '10.1093/molbev/msac241', '10.1111/jam.15806', '10.1111/mec.16503', '10.1186/s12864-021-07700-4', '10.1038/s41437-022-00499-0', '10.1128/JB.00587-20', '10.1098/rspb.2021.0577', '10.1093/gbe/evy007', '10.1111/evo.13205', '10.1093/molbev/msw254', '10.1371/journal.pgen.1006585', '10.1111/mec.13615', '10.1111/evo.12849', '10.1016/j.cub.2015.08.032', '10.1534/g3.115.023200', '10.1186/s12862-016-0662-8', '10.1098/rspb.2015.0801', '10.1038/ncomms3172', '10.1128/JVI.01080-14', '10.1016/j.meegid.2013.03.035', '10.1111/mec.12260', '10.1186/1471-2148-13-46', '10.1093/gbe/evab070', '10.1093/molbev/msv033', '10.3390/vaccines11101537', '10.1093/ve/vex035', '10.1007/s11262-016-1332-z', '10.1093/molbev/msad108', '10.3201/eid1909.130377', '10.1002/evl3.269', '10.1093/ve/veae012', '10.1038/s41437-019-0264-5', '10.3201/eid2701.191541', '10.1016/j.tube.2015.02.022', '10.1093/jeb/voae068', '10.1093/ve/vez020', '10.1093/molbev/msac189', '10.1093/gbe/evaa188', '10.1038/s41559-022-01665-7', '10.1371/journal.ppat.1010993', '10.1371/journal.pntd.0011527', '10.1111/eva.12594', '10.1093/infdis/jit618', '10.1002/ece3.4143', '10.1093/gbe/evae063', '10.1038/s41558-023-01696-3', '10.1111/eva.13656', '10.1002/ece3.3699', '10.1093/molbev/msab147', '10.1093/molbev/msu192', '10.1111/mec.17274', '10.1093/molbev/msac014', '10.1186/s13059-018-1503-4', '10.1093/molbev/msac248', '10.1111/jeb.14134', '10.1093/genetics/iyab142', '10.3390/genes11040400', '10.1038/hdy.2014.86', '10.1093/molbev/mst111', '10.1098/rstb.2022.0190', '10.1002/evl3.143', '10.1534/g3.117.043349', '10.1111/mec.15085', '10.1038/nrg3937', '10.1073/pnas.1919039117', '10.1073/pnas.2201521119', '10.1093/gbe/evab154', '10.1111/mec.14240', '10.1093/molbev/msx254', '10.1098/rspb.2022.1857', '10.1038/s41467-022-31622-8', '10.1038/s41559-022-01816-w', '10.1111/jeb.13764', '10.1093/gbe/evac074', '10.1093/gbe/evab239', '10.1073/pnas.1400378111', '10.1111/mec.15687', '10.1093/molbev/mst205', '10.1186/s12864-017-3485-0', '10.1534/genetics.118.301824', '10.1111/jeb.14152', '10.1093/gbe/evaa036', '10.1073/pnas.1714246115', '10.1093/molbev/msv248', '10.1093/molbev/msu256', '10.1007/978-1-0716-2561-3_18', '10.1093/molbev/msu048', '10.1111/mec.16933', '10.1038/s41559-023-02114-9', '10.1038/s41559-023-02185-8', '10.1111/mec.16451', '10.1186/s12862-021-01789-7', '10.7554/eLife.64971', '10.1128/mSystems.00495-21', '10.1016/j.meegid.2019.03.016', '10.1016/j.cub.2016.10.061', '10.1128/JVI.01519-08', '10.1038/s41559-019-0921-3', '10.1186/s12864-016-3298-6', '10.1093/gbe/evae114', '10.1371/journal.ppat.1009744', '10.1002/evl3.229', '10.1111/1755-0998.13837', '10.1093/molbev/msac179', '10.1093/molbev/msab340', '10.1093/ve/vead049', '10.1111/mec.13748', '10.1186/s12862-022-02083-w', '10.1038/s41477-019-0437-5', '10.1002/ece3.2402', '10.1111/mec.15790', '10.1093/molbev/msz183']

# -------------------------------
# Download PDFs
# -------------------------------

# List to track DOIs that failed to download

failed_dois = []

# Loop through each DOI and attempt to download its PDF
for doi in doi_list:
    try:
        # Generate a filename by replacing '/' with '_'
        filename = doi.replace("/", "_") + ".pdf"
        # Attempt to fetch the PDF for the DOI
        doi2pdf(doi, output=filename)
    except Exception as e:
        # If an error occurs, add the DOI to the failed list
        failed_dois.append(doi)
        print(f"Error processing DOI {doi}: {e}")

# -------------------------------
# Report failed DOIs
# -------------------------------

print("DOIs that didn't work:")
for doi in failed_dois:
    print(doi)


# May DOI list
doi_list = ['10.1038/s41467-023-43391-z', '10.1371/journal.ppat.1012090', '10.1016/j.chaos.2020.110018', '10.1016/j.meegid.2021.105153', '10.1099/mgen.0.001170', '10.1016/j.jgg.2020.10.002', '10.1128/spectrum.01219-22', '10.1007/s00239-021-10008-2', '10.1186/s12866-021-02158-6', '10.1128/AEM.00179-18', '10.1371/journal.pbio.1001637', '10.1186/s12866-017-1111-6', '10.1038/s41591-019-0559-3', '10.1126/sciadv.aax0530', '10.1016/j.soilbio.2019.05.004', '10.1038/srep38915', '10.1093/gbe/evac153', '10.1093/molbev/msac242', '10.1371/journal.pone.0147549', '10.1093/evolut/qpad054', '10.1093/gbe/evaa073', '10.1093/molbev/msq002', '10.1093/molbev/msu320', '10.1111/1755-0998.13167', '10.1111/mec.15579', '10.1111/mec.16748', '10.1111/mec.16111', '10.1093/molbev/msx247', '10.1093/icb/icac098', '10.1093/gbe/evad113', '10.3389/fmars.2020.00205', '10.1186/s13059-018-1503-4', '10.1038/s41467-021-21281-6', '10.1186/s13059-021-02425-9', '10.1038/ismej.2015.241', '10.1128/mBio.00987-21', '10.1038/s41559-020-1271-x', '10.1099/MGEN.0.000553', '10.1128/msystems.01477-21', '10.1371/journal.pgen.1009722', '10.1093/gbe/evaa178', '10.1016/j.envres.2023.115695', '10.1128/spectrum.03128-23', '10.1016/j.watres.2022.118556', '10.1093/gbe/evac114', '10.15252/msb.20188462', '10.1371/journal.pbio.2001586', '10.1021/acs.est.2c00793', '10.1093/infdis/jix298', '10.1080/22221751.2022.2040921', '10.1371/journal.ppat.1008298', '10.1534/genetics.112.143396', '10.3390/d13110584', '10.1016/j.meegid.2021.105184', '10.1099/jgv.0.000258', '10.1371/journal.pbio.0030300', '10.1016/j.jfma.2018.01.019', '10.1073/pnas.242608099', '10.7554/eLife.03568', '10.1016/j.meegid.2015.02.023', '10.3390/v11080720', '10.1128/JVI.02055-14', '10.1111/gcb.17126', '10.1016/j.cub.2023.03.084', '10.1371/journal.pone.0201838', '10.1038/s41586-022-04824-9', '10.1038/s41586-021-03224-9', '10.1111/mec.16760', '10.1093/gbe/evab237', '10.1016/j.jasrep.2020.102364', '10.1016/j.cell.2019.03.049', '10.1016/j.cub.2024.01.056', '10.1093/molbev/msae053', '10.1111/cobi.13889', '10.1073/pnas.1620410114', '10.1111/1755-0998.13371', '10.1098/rsos.201378', '10.3389/fmicb.2019.00116', '10.1186/s13637-016-0042-0', '10.1093/molbev/msr289', '10.1534/g3.119.400778', '10.1214/14-AOAS764', '10.1534/genetics.116.197566', '10.1093/bioinformatics/btv014', '10.1534/genetics.113.158220', '10.1534/genetics.112.140939', '10.1111/1755-0998.13553', '10.1093/genetics/iyad084', '10.1111/2041-210X.12535', '10.1111/mec.13323', '10.1073/pnas.2312377121', '10.1371/journal.pgen.1010324', '10.1038/hdy.2016.98', '10.1111/1755-0998.13244', '10.1016/j.biosystems.2024.105176', '10.1093/ve/vez011', '10.3389/fmed.2022.826746', '10.1016/j.jtbi.2017.09.021', '10.1534/genetics.118.301684', '10.1093/genetics/iyab074', '10.1371/journal.pgen.1005069', '10.1017/S0016672311000024', '10.1186/s13059-019-1770-8', '10.1016/j.compbiomed.2014.06.003', '10.1534/genetics.120.303463', '10.1111/1755-0998.13168', '10.1016/j.hal.2019.03.005', '10.1038/s41579-023-00890-6', '10.1038/s41559-017-0077', '10.1111/brv.12852', '10.1111/mec.13378', '10.1111/mec.15315', '10.1080/19490976.2023.2178797', '10.1016/j.copbio.2023.102898', '10.1002/wnan.12', '10.1038/s41564-022-01233-6', '10.1111/eva.12513', '10.1080/23818107.2018.1458651', '10.1016/j.tim.2011.03.006', '10.5281/ZENODO.7651343', '10.1093/icb/icac146', '10.1038/s41564-022-01157-1', '10.1073/pnas.1606587113']

# -------------------------------
# Download PDFs
# -------------------------------

# List to track DOIs that failed to download

failed_dois = []

# Loop through each DOI
for doi in doi_list:
    try:
        # Generate a filename by replacing '/' with '_'
        filename = doi.replace("/", "_") + ".pdf"
        # Attempt to fetch the PDF for the DOI
        doi2pdf(doi, output=filename)
    except Exception as e:
        # If an error occurs, add the DOI to the failed list
        failed_dois.append(doi)
        print(f"Error processing DOI {doi}: {e}")

# -------------------------------
# Report failed DOIs
# -------------------------------

print("DOIs that didn't work:")
for doi in failed_dois:
    print(doi)
